name: Autodeploy to Fargate

on:
  workflow_dispatch:
    inputs:
      service:
        description: "Application type"
        required: true
      version:
        description: "Docker image version"
        required: true
        default: "latest"
      environment:
        description: "Environment name"
        required: true

env:
  SERVICE: ${{ github.event.inputs.service }}
  VERSION: ${{ github.event.inputs.version }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: deployments/tasks/${{ env.SERVICE }}-${{ env.ENVIRONMENT }}.json
          container-name: thr-${{ env.SERVICE }}-${{ env.ENVIRONMENT }}
          image: ${{ secrets.AWS_ECR_REGISTRY }}/thr-ecr-${{ env.ENVIRONMENT }}/${{ env.SERVICE }}:${{ env.VERSION }}

      - name: Deploy Amazon ECS task definition
        id: deploy-ecs
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.SERVICE }}-service-${{ env.ENVIRONMENT }}
          cluster: thr-cluster-${{ env.ENVIRONMENT }}
          wait-for-service-stability: true
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Discord Commits
        uses: Ilshidur/action-discord@0.3.2
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "THR Backend deployment done! ðŸš€ðŸš€ðŸš€ - Check it out: <${{ secrets.SERVICE_URL }}>"
